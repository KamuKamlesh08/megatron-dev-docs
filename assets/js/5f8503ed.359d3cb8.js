"use strict";(self.webpackChunkmegatron_dev_docs=self.webpackChunkmegatron_dev_docs||[]).push([[7171],{3200:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/banking-platform-a71b1e57adeb3849a15bdf456979fa68.png"},7052:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"projects/megatron-kafka-lab/overview","title":"Kafka: From Legacy Integration to Real-Time Event Streaming","description":"1. Before Kafka Systems","source":"@site/docs/projects/megatron-kafka-lab/01-overview.md","sourceDirName":"projects/megatron-kafka-lab","slug":"/projects/megatron-kafka-lab/overview","permalink":"/docs/projects/megatron-kafka-lab/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"docs","previous":{"title":"React + Keycloak Integration","permalink":"/docs/projects/auth-system/04-react-keycloak-integration"},"next":{"title":"Kafka = Railway Analogy","permalink":"/docs/projects/megatron-kafka-lab/kafka-basic-concepts"}}');var r=n(4848),t=n(8453);const a={},l="Kafka: From Legacy Integration to Real-Time Event Streaming",c={},o=[{value:"1. Before Kafka Systems",id:"1-before-kafka-systems",level:2},{value:"2. Problems With These Approaches",id:"2-problems-with-these-approaches",level:2},{value:"3. How Kafka Resolved These Issues",id:"3-how-kafka-resolved-these-issues",level:2},{value:"4. Real-Time Banking Onboarding Example",id:"4-real-time-banking-onboarding-example",level:2},{value:"Actors",id:"actors",level:3},{value:"Flow With Kafka",id:"flow-with-kafka",level:3},{value:"Advantages Over Sync APIs",id:"advantages-over-sync-apis",level:3},{value:"5. Sync API vs Kafka Async (Quick Comparison)",id:"5-sync-api-vs-kafka-async-quick-comparison",level:2},{value:"5. Banking Platform",id:"5-banking-platform",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"kafka-from-legacy-integration-to-real-time-event-streaming",children:"Kafka: From Legacy Integration to Real-Time Event Streaming"})}),"\n",(0,r.jsx)(s.h2,{id:"1-before-kafka-systems",children:"1. Before Kafka Systems"}),"\n",(0,r.jsx)(s.p,{children:"Before Kafka, organizations relied on a mix of:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Database Polling"})," \u2013 Applications directly wrote to/queried a shared database."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"File Transfer (FTP, shared CSVs/XMLs)"})," \u2013 One system generated a file, another picked it up."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Traditional Message Queues (JMS, RabbitMQ, ActiveMQ)"})," \u2013 Queues decoupled systems but had limited throughput and lacked durable history."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"2-problems-with-these-approaches",children:"2. Problems With These Approaches"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Tight Coupling"}),": Producers and consumers were bound to specific database schemas or queue contracts."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Latency"}),": Polling or batch file transfers introduced delays, preventing real-time processing."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Scaling Bottlenecks"}),": Databases and legacy queues struggled with high event throughput."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Data Loss / No Replay"}),": Once a message was consumed from a queue, new consumers could not access past events."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Operational Complexity"}),": Error handling, retries, and compensations were fragile and duplicated across services."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Poor Fan-out"}),": Adding new downstream systems required producer code changes."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"3-how-kafka-resolved-these-issues",children:"3. How Kafka Resolved These Issues"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"High Throughput & Low Latency"}),": Handles millions of events per second in real time."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Durable Commit Log"}),": Events stored on disk can be replayed by new consumers at any time."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Loose Coupling"}),": Producers just publish to topics; consumers independently subscribe."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Scalability"}),": Partitioning and replication allow horizontal scaling and fault tolerance."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Fan-out by Design"}),": Any number of services (CRM, Analytics, Audit, Notifications) can consume the same topic."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Backpressure Handling"}),": Kafka buffers spikes in traffic without overwhelming downstream services."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Audit-Friendly"}),": Immutable, ordered log provides a natural audit trail."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"4-real-time-banking-onboarding-example",children:"4. Real-Time Banking Onboarding Example"}),"\n",(0,r.jsx)(s.h3,{id:"actors",children:"Actors"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Customer (Kamu Kamlesh)"})," \u2013 Uses mobile/web app to apply for an account."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Identity Service"})," \u2013 Runs KYC + AML checks."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Account Service"})," \u2013 Creates account if identity is verified."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Notify Service"})," \u2013 Sends SMS/Email/Push updates."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"flow-with-kafka",children:"Flow With Kafka"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Customer Onboarding Request"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Kamu Kamlesh submits details via Mobile App \u2192 API publishes ",(0,r.jsx)(s.code,{children:"customer.onboarding.requested"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Identity Verification"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Identity Service consumes onboarding event \u2192 publishes ",(0,r.jsx)(s.code,{children:"customer.identity.verified"})," (or ",(0,r.jsx)(s.code,{children:"customer.identity.failed"}),")."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Account Creation"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Account Service consumes verified event \u2192 publishes ",(0,r.jsx)(s.code,{children:"account.created"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Notifications"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Notify Service consumes both success (",(0,r.jsx)(s.code,{children:"account.created"}),") and failure (",(0,r.jsx)(s.code,{children:"identity.failed"}),") \u2192 publishes ",(0,r.jsx)(s.code,{children:"customer.notified"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"advantages-over-sync-apis",children:"Advantages Over Sync APIs"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"API responds instantly (\u201cYour request is received\u201d), while downstream services process asynchronously."}),"\n",(0,r.jsx)(s.li,{children:"Failure in one service does not block the whole flow; events wait in Kafka until recovery."}),"\n",(0,r.jsx)(s.li,{children:"New consumers (CRM, Analytics, Audit) can attach later and replay history."}),"\n",(0,r.jsx)(s.li,{children:"Clear audit trail of every step (requested, verified, created, notified)."}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"5-sync-api-vs-kafka-async-quick-comparison",children:"5. Sync API vs Kafka Async (Quick Comparison)"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Aspect"}),(0,r.jsx)(s.th,{children:"Sync API (Before Kafka)"}),(0,r.jsx)(s.th,{children:"Kafka Async (Event Streaming)"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Coupling"})}),(0,r.jsx)(s.td,{children:"Tightly coupled, direct dependencies"}),(0,r.jsx)(s.td,{children:"Loosely coupled via topics"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Latency"})}),(0,r.jsx)(s.td,{children:"End-to-end chain adds cumulative delay"}),(0,r.jsx)(s.td,{children:"API responds fast; processing async"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Scalability"})}),(0,r.jsx)(s.td,{children:"Limited by DB/queue bottlenecks"}),(0,r.jsx)(s.td,{children:"Horizontally scalable (partitions, groups)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Handling"})}),(0,r.jsx)(s.td,{children:"Cascading failures, retries complex"}),(0,r.jsx)(s.td,{children:"Failures isolated, events retried safely"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Replay"})}),(0,r.jsx)(s.td,{children:"Not possible (once consumed = gone)"}),(0,r.jsx)(s.td,{children:"Consumers can replay from log anytime"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Fan-out"})}),(0,r.jsx)(s.td,{children:"Adding new consumer = code changes"}),(0,r.jsx)(s.td,{children:"New consumers attach without producer changes"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Audit"})}),(0,r.jsx)(s.td,{children:"Hard to stitch logs"}),(0,r.jsx)(s.td,{children:"Natural immutable event trail"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"User Experience"})}),(0,r.jsx)(s.td,{children:"Delays, \u201cspinner\u201d till all done"}),(0,r.jsx)(s.td,{children:"Quick ACK (\u201cYour request is received\u201d)"})]})]})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"5-banking-platform",children:"5. Banking Platform"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Banking Platform",src:n(3200).A+"",width:"1264",height:"964"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>l});var i=n(6540);const r={},t=i.createContext(r);function a(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);