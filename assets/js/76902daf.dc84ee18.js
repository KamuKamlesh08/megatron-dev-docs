"use strict";(self.webpackChunkmegatron_dev_docs=self.webpackChunkmegatron_dev_docs||[]).push([[132],{2278:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"architecture/e-commerce/01-home-page","title":"User Initial Load & Personalized Homepage","description":"Status","source":"@site/docs/architecture/e-commerce/01-home-page.md","sourceDirName":"architecture/e-commerce","slug":"/architecture/e-commerce/01-home-page","permalink":"/docs/architecture/e-commerce/01-home-page","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"01-home-page","title":"User Initial Load & Personalized Homepage","sidebar_position":1},"sidebar":"docs","previous":{"title":"Kafka Advanced Console Lab","permalink":"/docs/projects/megatron-kafka-lab/kafka-advanced-console-lab"},"next":{"title":"E-Commerce System ADR Overview","permalink":"/docs/architecture/e-commerce/"}}');var r=s(4848),c=s(8453);const t={id:"01-home-page",title:"User Initial Load & Personalized Homepage",sidebar_position:1},l="Architecture Decision Record (ADR): User Initial Load & Personalized Homepage",d={},a=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2},{value:"Example Flow",id:"example-flow",level:2},{value:"Data Caching Logic",id:"data-caching-logic",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:2},{value:"UI/UX Design",id:"uiux-design",level:2}];function o(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"architecture-decision-record-adr-user-initial-load--personalized-homepage",children:"Architecture Decision Record (ADR): User Initial Load & Personalized Homepage"})}),"\n",(0,r.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,r.jsx)(n.p,{children:"Accepted"}),"\n",(0,r.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,r.jsx)(n.p,{children:"For a world-class e-commerce experience, Megatron Store must deliver a fast, personalized homepage as soon as a user opens the website or app. This means:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Detecting the user's location (city) on first load."}),"\n",(0,r.jsx)(n.li,{children:"Fetching trending products for that location and selected category."}),"\n",(0,r.jsx)(n.li,{children:"Showing personalized recommendations based on user profile and history."}),"\n",(0,r.jsx)(n.li,{children:"Displaying the user's active cart items."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The system must ensure this data is fetched with minimal latency, using Redis caching for both location/category-based and user-specific data, and must be robust to cache misses and backend failures."}),"\n",(0,r.jsx)(n.h2,{id:"decision",children:"Decision"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Production-Ready Initial Load Flow:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Location Detection (Frontend):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["On website/app open, the frontend attempts to detect the user's city using:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User profile (if logged in)"}),"\n",(0,r.jsx)(n.li,{children:"Browser geolocation (with user permission)"}),"\n",(0,r.jsx)(n.li,{children:"IP-based geolocation (fallback)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"The detected city is sent to the backend via the API Gateway."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Backend Aggregation (API Gateway/Orchestrator):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The backend orchestrates parallel requests to:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Product Service:"})," For trending products by (city, category)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Recommendation Service:"})," For personalized recommendations (if user is logged in)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cart Service:"})," For user's cart items (if user is logged in)."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Redis Caching Strategy:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trending Products:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Key: ",(0,r.jsx)(n.code,{children:"trending:{city}:{category}"})]}),"\n",(0,r.jsx)(n.li,{children:"On cache hit: Return cached list."}),"\n",(0,r.jsx)(n.li,{children:"On cache miss: Product Service queries MySQL, updates Redis (with short TTL, e.g., 10-15 min), and returns data."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Personalized Recommendations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Key: ",(0,r.jsx)(n.code,{children:"recommend:{userId}"})]}),"\n",(0,r.jsx)(n.li,{children:"On cache hit: Return cached recommendations."}),"\n",(0,r.jsx)(n.li,{children:"On cache miss: Recommendation Service computes, updates Redis (short TTL), and returns."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cart Items:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Key: ",(0,r.jsx)(n.code,{children:"cart:{userId}"})]}),"\n",(0,r.jsx)(n.li,{children:"On cache hit: Return cart from Redis."}),"\n",(0,r.jsx)(n.li,{children:"On cache miss: Cart Service loads from MySQL, updates Redis, and returns."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parallelization & Fallbacks:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All three data fetches are performed in parallel for minimal latency."}),"\n",(0,r.jsx)(n.li,{children:"If any service is slow or fails, backend returns partial data (e.g., trending only) with appropriate UI messaging."}),"\n",(0,r.jsx)(n.li,{children:"If user is not logged in, only trending products are fetched."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Frontend Rendering:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The frontend receives a single aggregated response and renders:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Trending products for the detected city/category."}),"\n",(0,r.jsx)(n.li,{children:"Personalized recommendations (if available)."}),"\n",(0,r.jsx)(n.li,{children:"Cart items (if available)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cache Invalidation & Freshness:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Trending and recommendation caches use short TTLs to ensure freshness."}),"\n",(0,r.jsx)(n.li,{children:"Cart cache is invalidated on cart update events (add/remove/checkout)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"consequences",children:"Consequences"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"+"})," Users see a fast, personalized homepage on every visit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"+"})," Redis caching ensures low latency and reduces DB/service load."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"+"})," Parallel backend orchestration minimizes total response time."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"+"})," Graceful fallback ensures partial data is shown even if some services are slow/down."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u2013"})," Requires careful cache key design, TTL tuning, and error handling."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u2013"})," Slightly increased complexity in backend orchestration and monitoring."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-flow",children:"Example Flow"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ravi opens Megatron Store from Delhi:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'Frontend detects city as "Delhi" (via profile or geolocation) and sends it to backend.'}),"\n",(0,r.jsxs)(n.li,{children:["Backend (API Gateway/Orchestrator) triggers parallel fetches:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Trending products for (Delhi, Electronics) from Redis/Product Service."}),"\n",(0,r.jsx)(n.li,{children:"Personalized recommendations for Ravi from Redis/Recommendation Service."}),"\n",(0,r.jsx)(n.li,{children:"Ravi's cart from Redis/Cart Service."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"If any data is missing in Redis, respective service loads from MySQL, updates Redis, and returns."}),"\n",(0,r.jsx)(n.li,{children:"Backend aggregates all available data and sends to frontend."}),"\n",(0,r.jsx)(n.li,{children:"Frontend displays trending, personalized, and cart items instantly."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"data-caching-logic",children:"Data Caching Logic"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trending Products Key:"})," ",(0,r.jsx)(n.code,{children:"trending:{city}:{category}"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User Recommendations Key:"})," ",(0,r.jsx)(n.code,{children:"recommend:{userId}"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User Cart Key:"})," ",(0,r.jsx)(n.code,{children:"cart:{userId}"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If any key is missing in Redis, backend fetches from source, sets in Redis, and serves the response."}),"\n",(0,r.jsx)(n.h2,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"User Personalized Homepage",src:s(8191).A+"",width:"1653",height:"795"})}),"\n",(0,r.jsx)(n.h2,{id:"uiux-design",children:"UI/UX Design"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Megatron Store Home Page",src:s(8098).A+"",width:"1024",height:"1536"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Decision by:"})," Megatron Store Backend Team",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Date:"})," 15-August-2025"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8098:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/home-page-ui-f491c53fe4b99c8f7854346f0afbb4ca.png"},8191:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecom-homepage-19105c42e16095bb29b6027e96c0c68d.png"},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const r={},c=i.createContext(r);function t(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);