"use strict";(self.webpackChunkmegatron_dev_docs=self.webpackChunkmegatron_dev_docs||[]).push([[7718],{4232:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"architecture/e-commerce/04-megatron-store-order-checkout","title":"Megatron Store \u2013 Order Checkout Flow","description":"This document explains the Order Checkout architecture and flow in Megatron Store, using a scalable, event-driven, microservices approach. The system leverages REST for synchronous calls and Kafka for asynchronous event-driven communication. All services are built with Spring Boot, use MySQL for persistence, and Redis for caching.","source":"@site/docs/architecture/e-commerce/04-megatron-store-order-checkout.md","sourceDirName":"architecture/e-commerce","slug":"/architecture/e-commerce/04-megatron-store-order-checkout","permalink":"/docs/architecture/e-commerce/04-megatron-store-order-checkout","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"04-megatron-store-order-checkout","title":"Megatron Store \u2013 Order Checkout Flow","sidebar_position":4},"sidebar":"docs","previous":{"title":"Megatron Store - Database Design Enhancements","permalink":"/docs/architecture/e-commerce/03-megatron-store-enhancement"},"next":{"title":"Docker Tips for Java Projects","permalink":"/docs/notes/docker-tips"}}');var s=n(4848),i=n(8453);const c={id:"04-megatron-store-order-checkout",title:"Megatron Store \u2013 Order Checkout Flow",sidebar_position:4},o="Megatron Store \u2013 Order Checkout Flow (Event Driven)",a={},d=[{value:"Real-Time Example",id:"real-time-example",level:2},{value:"Step-by-Step Flow",id:"step-by-step-flow",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:2},{value:"Diagram",id:"diagram",level:2},{value:"UI/UX Design",id:"uiux-design",level:2}];function l(e){const r={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"megatron-store--order-checkout-flow-event-driven",children:"Megatron Store \u2013 Order Checkout Flow (Event Driven)"})}),"\n",(0,s.jsxs)(r.p,{children:["This document explains the ",(0,s.jsx)(r.strong,{children:"Order Checkout"})," architecture and flow in Megatron Store, using a scalable, event-driven, microservices approach. The system leverages REST for synchronous calls and Kafka for asynchronous event-driven communication. All services are built with Spring Boot, use MySQL for persistence, and Redis for caching."]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"real-time-example",children:"Real-Time Example"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Scenario:"}),(0,s.jsx)(r.br,{}),"\n","Ravi, a user from Delhi, adds an iPhone 15 and a Laptop to his cart. He proceeds to checkout and pays using UPI. The system must validate his cart, reserve inventory, process payment, and notify him of the order status."]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"step-by-step-flow",children:"Step-by-Step Flow"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"User Initiates Checkout"}),(0,s.jsx)(r.br,{}),"\n",'Ravi clicks "Checkout" on the web/mobile UI.',(0,s.jsx)(r.br,{}),"\n","\u2192 UI sends a REST request to the API Gateway."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"API Gateway Fetches Cart"}),(0,s.jsx)(r.br,{}),"\n","API Gateway calls Cart Service to get Ravi's cart details.",(0,s.jsx)(r.br,{}),"\n","\u2192 Cart Service fetches the cart/session from Redis."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Cart Service Returns Cart"}),(0,s.jsx)(r.br,{}),"\n","Cart Service returns the cart items and prices to the API Gateway."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"API Gateway Creates Order"}),(0,s.jsx)(r.br,{}),"\n","API Gateway sends a REST request to Order Service to create a new order with the cart details."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Order Service Writes Order"}),(0,s.jsx)(r.br,{}),"\n","Order Service writes a new order (status=CREATED) to the orders_db."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Order Service Publishes OrderPlaced Event"}),(0,s.jsx)(r.br,{}),"\n","Order Service publishes an ",(0,s.jsx)(r.code,{children:"OrderPlaced"})," event to Kafka for downstream processing."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Inventory Reservation (Async)"}),(0,s.jsx)(r.br,{}),"\n","Kafka triggers Inventory Service to reserve stock for the order.",(0,s.jsx)(r.br,{}),"\n","\u2192 Inventory Service updates inventory_db."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Inventory Service Publishes Result"}),(0,s.jsx)(r.br,{}),"\n","Inventory Service publishes an ",(0,s.jsx)(r.code,{children:"InventoryReserved"})," or ",(0,s.jsx)(r.code,{children:"InventoryFailed"})," event to Kafka."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Payment Processing (Async)"}),(0,s.jsx)(r.br,{}),"\n","Kafka triggers Payment Service to process payment for the order.",(0,s.jsx)(r.br,{}),"\n","\u2192 Payment Service creates a payment transaction in payment_db and calls the external Payment Gateway (e.g., UPI)."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Payment Service Publishes Result"}),(0,s.jsx)(r.br,{}),"\n","Payment Service publishes a ",(0,s.jsx)(r.code,{children:"PaymentConfirmed"})," or ",(0,s.jsx)(r.code,{children:"PaymentFailed"})," event to Kafka."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Order Service Updates Status"}),(0,s.jsx)(r.br,{}),"\n","Order Service consumes payment/inventory events from Kafka and updates the order status in orders_db (e.g., CONFIRMED, FAILED)."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"User Notification"}),(0,s.jsx)(r.br,{}),"\n","Order Service notifies Notification Service (sync REST call) about the order status.",(0,s.jsx)(r.br,{}),"\n","\u2192 Notification Service sends email/SMS to Ravi and also publishes a notification event to Kafka for logging/metrics."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,s.jsx)(r.h2,{id:"diagram",children:"Diagram"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Order Checkout",src:n(8583).A+"",width:"1785",height:"1690"})}),"\n",(0,s.jsx)(r.h2,{id:"uiux-design",children:"UI/UX Design"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Order Checkout Page",src:n(9763).A+"",width:"1024",height:"1536"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Order Confirmed Page",src:n(9090).A+"",width:"1536",height:"1024"})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>o});var t=n(6540);const s={},i=t.createContext(s);function c(e){const r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:r},e.children)}},8583:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/ecom-checkout-48c388b216cba31ef9363cc5be70d758.png"},9090:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/order-confirm-page-ui-f213913af20d8019907c26d6f10d1e13.png"},9763:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/checkout-page-ui-cc518bfe3760c934c2279edcddb81ee8.png"}}]);